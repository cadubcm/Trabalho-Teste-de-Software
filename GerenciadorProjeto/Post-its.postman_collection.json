{
	"info": {
		"_postman_id": "3ce3837e-e5d4-4851-8955-a4e733810369",
		"name": "Post-its",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "45723683"
	},
	"item": [
		{
			"name": "Autenticação",
			"item": [
				{
					"name": "Testes de Registro",
					"item": [
						{
							"name": "Registro bem-sucedido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Resposta contém success true\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.be.true;\r",
											"});\r",
											"\r",
											"pm.test(\"Resposta contém userId\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.userId).to.be.a('number');\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"usuario_teste_{{$timestamp}}\",\r\n  \"password\": \"senha123\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/register",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Registro com usuário existente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 409\", function () {\r",
											"    pm.response.to.have.status(409);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"123456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/register",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"register"
									]
								}
							},
							"response": []
						},
						{
							"name": "Registro com dados incompletos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"teste\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/register",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"register"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Testes de Logon",
					"item": [
						{
							"name": "Login bem-sucedido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Resposta contém token\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.token).to.be.a('string');\r",
											"    pm.environment.set(\"auth_token\", jsonData.token);\r",
											"});\r",
											"\r",
											"pm.test(\"Resposta contém dados do usuário\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.user).to.have.property('id');\r",
											"    pm.expect(jsonData.user).to.have.property('username');\r",
											"    pm.environment.set(\"user_id\", jsonData.user.id);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"123456\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login com dados inválidos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 401\", function () {\r",
											"    pm.response.to.have.status(401);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"username\": \"admin\",\r\n  \"password\": \"senhaerrada\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						},
						{
							"name": "Login sem dados",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/login",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"login"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "CRUD",
			"item": [
				{
					"name": "Testes GET",
					"item": [
						{
							"name": "Listar post-it",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Resposta é um array\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData).to.be.an('array');\r",
											"});\r",
											"\r",
											"pm.test(\"Post-its têm estrutura correta\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    if (jsonData.length > 0) {\r",
											"        pm.expect(jsonData[0]).to.have.property('id');\r",
											"        pm.expect(jsonData[0]).to.have.property('title');\r",
											"        pm.expect(jsonData[0]).to.have.property('text');\r",
											"        pm.expect(jsonData[0]).to.have.property('color');\r",
											"        pm.expect(jsonData[0]).to.have.property('done');\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{auth_token}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{base_url}}/api/postits",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"postits"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Testes POST",
					"item": [
						{
							"name": "Criar post-it bem sucedido",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Post-it criado com dados corretos\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Teste Post-it\");\r",
											"    pm.expect(jsonData.text).to.eql(\"Descrição do teste\");\r",
											"    pm.expect(jsonData.color).to.eql(\"yellow\");\r",
											"    pm.expect(jsonData.done).to.eql(0)\r",
											"    pm.environment.set(\"postit_id\", jsonData.id);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Teste Post-it\",\r\n  \"text\": \"Descrição do teste\",\r\n  \"color\": \"yellow\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/postits",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"postits"
									]
								}
							},
							"response": []
						},
						{
							"name": "Criar post-it com dados mínimos",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{}"
								},
								"url": {
									"raw": "{{base_url}}/api/postits",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"postits"
									]
								}
							},
							"response": []
						},
						{
							"name": "Criar post-it no limite",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 400\", function () {\r",
											"    pm.response.to.have.status(400);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Teste Post-it\",\r\n  \"text\": \"Descrição do teste\",\r\n  \"color\": \"yellow\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/postits",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"postits"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Testes PUT",
					"item": [
						{
							"name": "Atualizar Post-it",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Post-it atualizado corretamente\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.title).to.eql(\"Título Atualizado\");\r",
											"    pm.expect(jsonData.done).to.eql(1);\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Título Atualizado\",\r\n  \"text\": \"Texto atualizado\",\r\n  \"color\": \"blue\",\r\n  \"done\": true\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{base_url}}/api/postits/{{postit_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"postits",
										"{{postit_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Testes DELETE",
					"item": [
						{
							"name": "Deletar Post-it",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Mensagem de sucesso retornada\", function () {\r",
											"    const jsonData = pm.response.json();\r",
											"    pm.expect(jsonData.success).to.be.true;\r",
											"});"
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Título Atualizado\",\r\n  \"text\": \"Texto atualizado\",\r\n  \"color\": \"blue\",\r\n  \"done\": true\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/postits/{{postit_id}}",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"postits",
										"{{postit_id}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Deletar Post-it Inexistente",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code é 404\", function () {\r",
											"    pm.response.to.have.status(404);\r",
											"});\r",
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"title\": \"Título Atualizado\",\r\n  \"text\": \"Texto atualizado\",\r\n  \"color\": \"blue\",\r\n  \"done\": true\r\n}"
								},
								"url": {
									"raw": "{{base_url}}/api/postits/99999",
									"host": [
										"{{base_url}}"
									],
									"path": [
										"api",
										"postits",
										"99999"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Segurança",
			"item": [
				{
					"name": "Listar post-it com token inválido",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 403\", function () {\r",
									"    pm.response.to.have.status(403);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "token_invalido",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/postits",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"postits"
							]
						}
					},
					"response": []
				},
				{
					"name": "Listar post-it sem autorização",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/postits",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"postits"
							]
						}
					},
					"response": []
				},
				{
					"name": "Atualizar Post-it Inexistente",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 404\", function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Título Atualizado\",\r\n  \"text\": \"Texto atualizado\",\r\n  \"color\": \"blue\",\r\n  \"done\": true\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{base_url}}/api/postits/99999",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"postits",
								"99999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deletar Post-it Sem Autenticação",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code é 401\", function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "DELETE",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"title\": \"Título Atualizado\",\r\n  \"text\": \"Texto atualizado\",\r\n  \"color\": \"blue\",\r\n  \"done\": true\r\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/postits/{{postit_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"postits",
								"{{postit_id}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{auth_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "auth_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "postit_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "base_url",
			"value": "http://localhost:3000",
			"type": "default"
		}
	]
}